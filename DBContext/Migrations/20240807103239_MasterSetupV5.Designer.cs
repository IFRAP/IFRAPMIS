// <auto-generated />
using System;
using IFRAPMIS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DBContext.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240807103239_MasterSetupV5")]
    partial class MasterSetupV5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Models.DamageAssessmentLivestock", b =>
                {
                    b.Property<int>("DamageAssessmentLivestockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DamageAssessmentLivestockId"));

                    b.Property<string>("DamageAssessmentLivestockType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DamageAssessmentLivestockId");

                    b.ToTable("DamageAssessmentLivestocks");
                });

            modelBuilder.Entity("DAL.Models.DamageIP", b =>
                {
                    b.Property<int>("DamageIPId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DamageIPId"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BeneficiaryIPId")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssessmentHTSId")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssessmentLivestockId")
                        .HasColumnType("int");

                    b.Property<string>("DamageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.HasKey("DamageIPId");

                    b.HasIndex("BeneficiaryIPId");

                    b.HasIndex("DamageAssessmentHTSId");

                    b.HasIndex("DamageAssessmentLivestockId");

                    b.ToTable("DamageIPs");
                });

            modelBuilder.Entity("DAL.Models.DamagePDMA", b =>
                {
                    b.Property<int>("DamagePDMAId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DamagePDMAId"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BeneficiaryPDMAId")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssessmentHTSId")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssessmentLivestockId")
                        .HasColumnType("int");

                    b.Property<string>("DamageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.HasKey("DamagePDMAId");

                    b.HasIndex("BeneficiaryPDMAId");

                    b.HasIndex("DamageAssessmentHTSId");

                    b.HasIndex("DamageAssessmentLivestockId");

                    b.ToTable("DamagePDMAs");
                });

            modelBuilder.Entity("DAL.Models.DamageVerified", b =>
                {
                    b.Property<int>("DamageVerifiedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DamageVerifiedId"));

                    b.Property<string>("Attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BeneficiaryVerifiedId")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssessmentHTSId")
                        .HasColumnType("int");

                    b.Property<int>("DamageAssessmentLivestockId")
                        .HasColumnType("int");

                    b.Property<string>("DamageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.HasKey("DamageVerifiedId");

                    b.HasIndex("BeneficiaryVerifiedId");

                    b.HasIndex("DamageAssessmentHTSId");

                    b.HasIndex("DamageAssessmentLivestockId");

                    b.ToTable("DamageVerifieds");
                });

            modelBuilder.Entity("DAL.Models.Domain.HTS.DamageAssessmentHTS", b =>
                {
                    b.Property<int>("DamageAssessmentHTSId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DamageAssessmentHTSId"));

                    b.Property<string>("DamageAssessmentHTSType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DamageAssessmentHTSId");

                    b.ToTable("DamageAssessmentHTSs");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.BeneficiaryIP", b =>
                {
                    b.Property<int>("BeneficiaryIPId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BeneficiaryIPId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("BeneficiaryFather")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeneficiaryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNICAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisabilityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritialStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tehsil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnionCouncil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VillageId")
                        .HasColumnType("int");

                    b.HasKey("BeneficiaryIPId");

                    b.HasIndex("VillageId");

                    b.ToTable("BeneficiaryIPs");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.BeneficiaryPDMA", b =>
                {
                    b.Property<int>("BeneficiaryPDMAId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BeneficiaryPDMAId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("BeneficiaryFather")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeneficiaryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNICAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisabilityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritialStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tehsil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnionCouncil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VillageId")
                        .HasColumnType("int");

                    b.HasKey("BeneficiaryPDMAId");

                    b.HasIndex("VillageId");

                    b.ToTable("BeneficiaryPDMAs");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.BeneficiaryVerified", b =>
                {
                    b.Property<int>("BeneficiaryVerifiedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BeneficiaryVerifiedId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("BeneficiaryFather")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeneficiaryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CIMemberId")
                        .HasColumnType("int");

                    b.Property<string>("CNIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNICAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisabilityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritialStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tehsil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnionCouncil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VillageId")
                        .HasColumnType("int");

                    b.HasKey("BeneficiaryVerifiedId");

                    b.HasIndex("CIMemberId")
                        .IsUnique();

                    b.HasIndex("VillageId");

                    b.ToTable("BeneficiaryVerifieds");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.CICIG", b =>
                {
                    b.Property<int>("CICIGId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CICIGId"));

                    b.Property<string>("ApprovalComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attachement1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attachement2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attachement3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntryBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseHoldNumber")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Lat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Long")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tehsil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnionCouncil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Venue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VerificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VillageId")
                        .HasColumnType("int");

                    b.HasKey("CICIGId");

                    b.HasIndex("VillageId");

                    b.ToTable("CICIGs");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.CICIGTrainings", b =>
                {
                    b.Property<int>("CICIGTrainingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CICIGTrainingsId"));

                    b.Property<string>("Attachment1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attachment2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attachment3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ended")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Long")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Started")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tehsil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalMembersParticipated")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalNumberFemale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalNumberMale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingHeadName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrainingTitleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnionCouncil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Venue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VillageId")
                        .HasColumnType("int");

                    b.HasKey("CICIGTrainingsId");

                    b.HasIndex("VillageId");

                    b.ToTable("CICIGTrainings");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.CIMember", b =>
                {
                    b.Property<int>("CIMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CIMemberId"));

                    b.Property<int>("CICIGId")
                        .HasColumnType("int");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CIMemberId");

                    b.HasIndex("CICIGId");

                    b.ToTable("CIMembers");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.CITrainingMember", b =>
                {
                    b.Property<int>("CITrainingMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CITrainingMemberId"));

                    b.Property<int>("CICIGTrainingsId")
                        .HasColumnType("int");

                    b.HasKey("CITrainingMemberId");

                    b.HasIndex("CICIGTrainingsId");

                    b.ToTable("CITrainingMembers");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.CITrainingParticipation", b =>
                {
                    b.Property<int>("CIIrainingParticipationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CIIrainingParticipationId"));

                    b.Property<int>("CICIGId")
                        .HasColumnType("int");

                    b.Property<int>("CICIGTrainingsId")
                        .HasColumnType("int");

                    b.HasKey("CIIrainingParticipationId");

                    b.HasIndex("CICIGId")
                        .IsUnique();

                    b.HasIndex("CICIGTrainingsId")
                        .IsUnique();

                    b.ToTable("CITrainingParticipations");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.District", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistrictId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.HasKey("DistrictId");

                    b.HasIndex("DivisionId");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Division", b =>
                {
                    b.Property<int>("DivisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DivisionId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvienceId")
                        .HasColumnType("int");

                    b.HasKey("DivisionId");

                    b.HasIndex("ProvienceId");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Provience", b =>
                {
                    b.Property<int>("ProvienceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvienceId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProvienceId");

                    b.ToTable("Proviences");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Tehsil", b =>
                {
                    b.Property<int>("TehsilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TehsilId"));

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("TehsilName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TehsilId");

                    b.HasIndex("DistrictId");

                    b.ToTable("Teshsils");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.TrainingHead", b =>
                {
                    b.Property<int?>("TrainingHeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("TrainingHeadId"));

                    b.Property<int>("CICIGTrainingsId")
                        .HasColumnType("int");

                    b.Property<string>("TrainingHeadName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TrainingHeadId");

                    b.HasIndex("CICIGTrainingsId")
                        .IsUnique();

                    b.ToTable("TrainingHead");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.TrainingTitle", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitleId"));

                    b.Property<int>("CICIGTrainingsId")
                        .HasColumnType("int");

                    b.Property<string>("TrainingName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TitleId");

                    b.HasIndex("CICIGTrainingsId")
                        .IsUnique();

                    b.ToTable("TrainingTitle");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.UnionCouncil", b =>
                {
                    b.Property<int>("UnionCouncilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnionCouncilId"));

                    b.Property<int>("TehsilId")
                        .HasColumnType("int");

                    b.Property<string>("UnionCouncilName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnionCouncilId");

                    b.HasIndex("TehsilId");

                    b.ToTable("UnionCouncils");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Village", b =>
                {
                    b.Property<int>("VillageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VillageId"));

                    b.Property<int>("UnionCouncilId")
                        .HasColumnType("int");

                    b.Property<string>("VillageName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VillageId");

                    b.HasIndex("UnionCouncilId");

                    b.ToTable("Villages");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator().HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DAL.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ToolAccess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsernameChangeLimit")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("DAL.Models.DamageIP", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.BeneficiaryIP", "BeneficiaryIP")
                        .WithMany("DamageIPs")
                        .HasForeignKey("BeneficiaryIPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.HTS.DamageAssessmentHTS", "DamageAssessmentHTS")
                        .WithMany("DamageIPs")
                        .HasForeignKey("DamageAssessmentHTSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.DamageAssessmentLivestock", "DamageAssessmentLivestock")
                        .WithMany("DamageIPs")
                        .HasForeignKey("DamageAssessmentLivestockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BeneficiaryIP");

                    b.Navigation("DamageAssessmentHTS");

                    b.Navigation("DamageAssessmentLivestock");
                });

            modelBuilder.Entity("DAL.Models.DamagePDMA", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.BeneficiaryPDMA", "BeneficiaryPDMA")
                        .WithMany("DamagePDMAs")
                        .HasForeignKey("BeneficiaryPDMAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.HTS.DamageAssessmentHTS", "DamageAssessmentHTS")
                        .WithMany("DamagePDMAs")
                        .HasForeignKey("DamageAssessmentHTSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.DamageAssessmentLivestock", "DamageAssessmentLivestock")
                        .WithMany("DamagePDMAs")
                        .HasForeignKey("DamageAssessmentLivestockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BeneficiaryPDMA");

                    b.Navigation("DamageAssessmentHTS");

                    b.Navigation("DamageAssessmentLivestock");
                });

            modelBuilder.Entity("DAL.Models.DamageVerified", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.BeneficiaryVerified", "BeneficiaryVerified")
                        .WithMany("DamageVerifieds")
                        .HasForeignKey("BeneficiaryVerifiedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.HTS.DamageAssessmentHTS", "DamageAssessmentHTS")
                        .WithMany("DamageVerifieds")
                        .HasForeignKey("DamageAssessmentHTSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.DamageAssessmentLivestock", "DamageAssessmentLivestock")
                        .WithMany("DamageVerifieds")
                        .HasForeignKey("DamageAssessmentLivestockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BeneficiaryVerified");

                    b.Navigation("DamageAssessmentHTS");

                    b.Navigation("DamageAssessmentLivestock");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.BeneficiaryIP", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.Village", null)
                        .WithMany("BeneficiaryIPs")
                        .HasForeignKey("VillageId");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.BeneficiaryPDMA", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.Village", null)
                        .WithMany("BeneficiaryPDMAs")
                        .HasForeignKey("VillageId");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.BeneficiaryVerified", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.CIMember", "CIMember")
                        .WithOne("BeneficiaryVerified")
                        .HasForeignKey("DAL.Models.Domain.MasterSetup.BeneficiaryVerified", "CIMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.MasterSetup.Village", null)
                        .WithMany("BeneficiaryVerifieds")
                        .HasForeignKey("VillageId");

                    b.Navigation("CIMember");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.CICIG", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.Village", "Village")
                        .WithMany("CICIGs")
                        .HasForeignKey("VillageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Village");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.CICIGTrainings", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.Village", "Village")
                        .WithMany("CICIGTrainings")
                        .HasForeignKey("VillageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Village");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.CIMember", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.CICIG", "CICIG")
                        .WithMany("CICIGMember")
                        .HasForeignKey("CICIGId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CICIG");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.CITrainingMember", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.CICIGTrainings", "CICIGTrainings")
                        .WithMany("Members")
                        .HasForeignKey("CICIGTrainingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CICIGTrainings");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.CITrainingParticipation", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.CICIG", "CICIG")
                        .WithOne("CITrainingParticipation")
                        .HasForeignKey("DAL.Models.Domain.MasterSetup.CITrainingParticipation", "CICIGId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Models.Domain.MasterSetup.CICIGTrainings", "CICIGTrainings")
                        .WithOne("CITrainingParticipation")
                        .HasForeignKey("DAL.Models.Domain.MasterSetup.CITrainingParticipation", "CICIGTrainingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CICIG");

                    b.Navigation("CICIGTrainings");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.District", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.Division", "Division")
                        .WithMany("District")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Division", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.Provience", "Provience")
                        .WithMany("Division")
                        .HasForeignKey("ProvienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provience");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Tehsil", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.District", "District")
                        .WithMany("Tehsils")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.TrainingHead", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.CICIGTrainings", "CICIGTrainings")
                        .WithOne("TrainingHead")
                        .HasForeignKey("DAL.Models.Domain.MasterSetup.TrainingHead", "CICIGTrainingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CICIGTrainings");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.TrainingTitle", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.CICIGTrainings", "CICIGTrainings")
                        .WithOne("TrainingTitle")
                        .HasForeignKey("DAL.Models.Domain.MasterSetup.TrainingTitle", "CICIGTrainingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CICIGTrainings");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.UnionCouncil", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.Tehsil", "Tehsil")
                        .WithMany("UnionCouncils")
                        .HasForeignKey("TehsilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tehsil");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Village", b =>
                {
                    b.HasOne("DAL.Models.Domain.MasterSetup.UnionCouncil", "UnionCouncils")
                        .WithMany("Villages")
                        .HasForeignKey("UnionCouncilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnionCouncils");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DAL.Models.DamageAssessmentLivestock", b =>
                {
                    b.Navigation("DamageIPs");

                    b.Navigation("DamagePDMAs");

                    b.Navigation("DamageVerifieds");
                });

            modelBuilder.Entity("DAL.Models.Domain.HTS.DamageAssessmentHTS", b =>
                {
                    b.Navigation("DamageIPs");

                    b.Navigation("DamagePDMAs");

                    b.Navigation("DamageVerifieds");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.BeneficiaryIP", b =>
                {
                    b.Navigation("DamageIPs");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.BeneficiaryPDMA", b =>
                {
                    b.Navigation("DamagePDMAs");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.BeneficiaryVerified", b =>
                {
                    b.Navigation("DamageVerifieds");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.CICIG", b =>
                {
                    b.Navigation("CICIGMember");

                    b.Navigation("CITrainingParticipation");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.CICIGTrainings", b =>
                {
                    b.Navigation("CITrainingParticipation");

                    b.Navigation("Members");

                    b.Navigation("TrainingHead");

                    b.Navigation("TrainingTitle");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.CIMember", b =>
                {
                    b.Navigation("BeneficiaryVerified");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.District", b =>
                {
                    b.Navigation("Tehsils");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Division", b =>
                {
                    b.Navigation("District");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Provience", b =>
                {
                    b.Navigation("Division");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Tehsil", b =>
                {
                    b.Navigation("UnionCouncils");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.UnionCouncil", b =>
                {
                    b.Navigation("Villages");
                });

            modelBuilder.Entity("DAL.Models.Domain.MasterSetup.Village", b =>
                {
                    b.Navigation("BeneficiaryIPs");

                    b.Navigation("BeneficiaryPDMAs");

                    b.Navigation("BeneficiaryVerifieds");

                    b.Navigation("CICIGTrainings");

                    b.Navigation("CICIGs");
                });
#pragma warning restore 612, 618
        }
    }
}
